name: Security Scan

on:
  pull_request:
    types: [opened, synchronize]
  push:
    branches:
      - main

jobs:
  security_scan:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install Bandit
        run: pip install bandit

      - name: Run Bandit
        id: bandit
        run: |
          bandit -r . > bandit_results.txt || true
          echo "::set-output name=has_critical_vulnerabilities::$(grep -q 'Severity: CRITICAL' bandit_results.txt && echo true || echo false)"

      - name: Check for Critical Vulnerabilities
        run: |
          if [ "${{ steps.bandit.outputs.has_critical_vulnerabilities }}" == "true" ]; then
            echo "Critical vulnerabilities found. Blocking the pull request."
            # Add a comment to the pull request
            # Block the pull request
          else
            echo "No critical vulnerabilities found. Merging the pull request."
            # Add a comment to the pull request
            # Merge the pull request
          fi
          
      - name: Generate SBOM
        uses: CycloneDX/bom-action@v1
        with:
          output: "bom.xml"
          
      - name: Run Dependency-Check
        uses: dependency-check/dependency-check-action@v2
        with:
          format: 'ALL'
          scan: 'true'
          outputDirectory: 'dependency-check-report'

      - name: Upload SBOM and Dependency Scan Reports
        uses: actions/upload-artifact@v2
        with:
           name: scan-reports
           path: |
            bom.xml
            dependency-check-report
      
          
    


      
